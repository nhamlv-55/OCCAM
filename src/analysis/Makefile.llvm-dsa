#------------------------------------------------------------------#
# Usage: make install INSTALL_DIR=XXX
#------------------------------------------------------------------#

# Ian Mason's Makefile -- point to the llvm-config of the version you
# want to build against (using the LLVM_CONFIG environment variable)
# but set the default if there is no environment version there...

ifeq ($(LLVM_CONFIG),)
	LLVM_CONFIG=llvm-config
endif

# BD: made all things dependent on LLVM_HOME

LLVM_CFG = $(LLVM_HOME)/bin/$(LLVM_CONFIG)

LLVM_INCLUDE = $(shell ${LLVM_CFG} --includedir)

CXX_FLAGS += $(shell  ${LLVM_CFG} --cxxflags) -I${LLVM_INCLUDE} -I../include -I/usr/local/include  -fPIC

CXX_FLAGS += -I./llvm-dsa/include

C_FLAGS = $(shell  ${LLVM_CFG} --cflags)

CPP_FLAGS += $(shell  ${LLVM_CFG} --cppflags) -I${LLVM_INCLUDE} -I../include -I/usr/local/include

OS   =  $(shell uname)

## Default install directory
INSTALL_DIR=.

LIBRARYNAME=libDSA

ifeq (Darwin, $(findstring Darwin, ${OS}))
#  DARWIN
LIBRARY = ${LIBRARYNAME}.dylib
LIBFLAGS = -dynamiclib
LD_FLAGS += -undefined suppress -flat_namespace
else ifeq (FreeBSD, $(findstring FreeBSD, ${OS}))
# FreeBSD
LIBRARY = ${LIBRARYNAME}.so
LIBFLAGS = -shared -Wl,-soname,${LIBRARY}
else
# LINUX
LIBRARY = ${LIBRARYNAME}.so
LIBFLAGS = -shared -Wl,-soname,${LIBRARY}
endif

# SOURCES =  $(wildcard lib/AssistDS/ArgCast.cpp \
# 		      lib/AssistDS/ArgSimplify.cpp \
# 		      lib/AssistDS/DsNodeEquivs.cpp \
#                       lib/AssistDS/DataStructureCallGraph.cpp \
# 	              lib/AssistDS/Devirt.cpp \
# 	              lib/AssistDS/DevirtTypes.cpp \
# 	              lib/AssistDS/DynCount.cpp \
# 	              lib/AssistDS/FuncSimplify.cpp \
# 	              lib/AssistDS/FuncSpec.cpp \
#                       lib/AssistDS/IndCloner.cpp \
# 		      lib/AssistDS/Int2PtrCmp.cpp \
# 	              lib/AssistDS/SVADevirt.cpp \
# 		      lib/AssistDS/SimplifyExtractValue.cpp \
# 	              lib/AssistDS/SimplifyGEP.cpp \
# 	              lib/AssistDS/SimplifyInsertValue.cpp \
# 	              lib/AssistDS/SimplifyLoad.cpp)
## Not ported to LLVM 5.0: 
		      #lib/AssistDS/GEPExprArgs.cpp
		      #lib/AssistDS/MergeGEP.cpp
		      #lib/AssistDS/StructReturnToPointer.cpp
		      #lib/AssistDS/TypeChecks.cpp 
	              #lib/AssistDS/TypeChecksOpt.cpp

SOURCES += $(wildcard llvm-dsa/lib/DSA/*.cpp)

OBJECTS := $(patsubst %.cpp,%.o,${SOURCES}) 

INSTALL = install

.PHONY: lib

all: ${LIBRARY}

${LIBRARY}: ${SOURCES} ${OBJECTS}
	@echo "The sources ${SOURCES} are being built according to ${LLVM_CFG}"
	$(CXX) ${OBJECTS} ${LIBFLAGS} -o ${LIBRARY} ${CXX_FLAGS} ${LD_FLAGS} 

%.o: %.cpp
	$(CXX) -I. ${CXX_FLAGS} $< -c -o $@

clean: 
	rm -f ${OBJECTS} ${LIBRARY} 

install: ${LIBRARY}
	mkdir -p $(INSTALL_DIR)
	$(INSTALL) -m 664 ${LIBRARY} $(INSTALL_DIR)

