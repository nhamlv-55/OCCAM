#!/usr/bin/env python

import sys
from llvmcpy.llvm import *


from code.callgraph import CallGraph

def main(args):
    if len(args) > 1:
        buffer = create_memory_buffer_with_contents_of_file(sys.argv[1])
        context = get_global_context()
        module = context.parse_ir(buffer)

        if module is None:
            return 0

        gname = sys.argv[1].replace('.', '_')

        callgraph = CallGraph.fromModule(gname, module)

        #print(callgraph)
        print(callgraph.toDotString())

        return 0

    else:
        print("Usage: {0} <llvm bitcode or ir>\n".format(args[0]))
        return 1







if __name__ == '__main__':
    sys.exit(main(sys.argv))
